// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using olbe.Data;

namespace olbe.Migrations
{
    [DbContext(typeof(ArbankContext))]
    [Migration("20211227154243_Deneme123")]
    partial class Deneme123
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("olbe.Entity.Admin", b =>
                {
                    b.Property<int>("adminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("adminName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("adminPassword")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("adminId");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("olbe.Entity.BankAccount", b =>
                {
                    b.Property<int>("bankAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Money")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("bankAccountId");

                    b.HasIndex("userId");

                    b.ToTable("BankAccount");
                });

            modelBuilder.Entity("olbe.Entity.Process", b =>
                {
                    b.Property<int>("processId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("bankAccountId")
                        .HasColumnType("int");

                    b.Property<int>("processAmount")
                        .HasColumnType("int");

                    b.Property<int>("processTypeId")
                        .HasColumnType("int");

                    b.HasKey("processId");

                    b.HasIndex("bankAccountId");

                    b.HasIndex("processTypeId");

                    b.ToTable("Process");
                });

            modelBuilder.Entity("olbe.Entity.ProcessType", b =>
                {
                    b.Property<int>("processTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("processType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("processTypeId");

                    b.ToTable("ProcessType");
                });

            modelBuilder.Entity("olbe.Entity.User", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("userMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userTC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userTel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("olbe.Entity.BankAccount", b =>
                {
                    b.HasOne("olbe.Entity.User", "User")
                        .WithMany("BankAccount")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("olbe.Entity.Process", b =>
                {
                    b.HasOne("olbe.Entity.BankAccount", "BankAccount")
                        .WithMany()
                        .HasForeignKey("bankAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("olbe.Entity.ProcessType", "ProcessType")
                        .WithMany()
                        .HasForeignKey("processTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BankAccount");

                    b.Navigation("ProcessType");
                });

            modelBuilder.Entity("olbe.Entity.User", b =>
                {
                    b.Navigation("BankAccount");
                });
#pragma warning restore 612, 618
        }
    }
}
